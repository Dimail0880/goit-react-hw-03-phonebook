{"version":3,"sources":["Components/Form/Form.js","Components/ContactsItem/ContactListItem.js","Components/ContactsList/ContactsList.js","Components/ContactsFilter/ContactsFilterForm.js","helpers/storage.js","App.js","index.js"],"names":["Form","name","number","handleChange","handleSubmit","className","autoComplete","onSubmit","type","value","onChange","ContactListItem","contact","deleteContact","id","onClick","ContactsList","contactList","map","el","key","uuidv4","ContactsFilterForm","handleFilter","localStorage","setItem","JSON","stringify","err","Error","items","getItem","parse","App","state","contacts","filter","updateStorage","prevState","storage","e","target","setState","preventDefault","Number","newContact","some","alert","length","getFilteredContacts","filterValue","toLowerCase","includes","contactsData","this","prevProps","filteredContacts","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1c27435.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = ({ name, number, handleChange, handleSubmit }) => {\r\n  return (\r\n    <div>\r\n      <form className=\"form-section\" autoComplete=\"off\" onSubmit={handleSubmit}>\r\n        <h4>Name</h4>\r\n        <input\r\n          name=\"name\"\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={handleChange}\r\n        ></input>\r\n\r\n        <h4>Number</h4>\r\n        <input\r\n          name=\"number\"\r\n          type=\"text\"\r\n          value={number}\r\n          onChange={handleChange}\r\n        ></input>\r\n        <button className=\"addContact-btn\" type=\"submit\">Add contact</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst ContactListItem = ({ contact, name, number, deleteContact, id }) => {\r\n  return (\r\n    <li>\r\n      {name}: {number}    \r\n        <button id={id} onClick={() => deleteContact(contact.id)} >Delete</button>\r\n\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\"; // uuidv4()\r\nimport ContactListItem from \"../ContactsItem/ContactListItem\";\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\n\r\nconst ContactsList = ({ contactList, deleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contactList.map((el) => (\r\n        <ContactListItem key={uuidv4()} name={el.name} number={el.number} deleteContact={deleteContact} contact={el} />\r\n      ))}\r\n      <ToastContainer />\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import React from 'react';\r\n\r\nconst ContactsFilterForm = ({handleFilter}) => {\r\n    return (\r\n        <form>\r\n             <p>Find contact by name</p>\r\n      <input type=\"text\" onChange={handleFilter} />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ContactsFilterForm;","const save = (key, value) => {\r\n    try {\r\n      localStorage.setItem(key, JSON.stringify(value));\r\n    } catch (err) {\r\n      throw new Error();\r\n    }\r\n  };\r\n  const get = key => {\r\n    try {\r\n      const items = localStorage.getItem(key);\r\n      return items ? JSON.parse(items) : null;\r\n    } catch (err) {\r\n      throw new Error();\r\n    }\r\n  };\r\n  export default {\r\n    save,\r\n    get,\r\n  }","import React, { Component } from \"react\";\nimport Form from \"./Components/Form/Form\";\nimport ContactsList from \"./Components/ContactsList/ContactsList\";\nimport { v4 as uuidv4 } from \"uuid\"; // uuidv4()\nimport ContactsFilterForm from \"./Components/ContactsFilter/ContactsFilterForm\";\n// import { toast } from 'react-toastify'; \nimport \"react-toastify/dist/ReactToastify.css\";\nimport storage from \"../src/helpers/storage\";\n\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n    name: \"\",\n    number: \"\",\n  };\n\n\n  async componentDidMount() {\n    const contactsData = storage.get(\"contacts\");\n    if (contactsData) {\n      this.setState({ contacts: contactsData });\n    }\n  }\n\n\n  componentDidUpdate(prevProps, prevState) {\n    this.updateStorage(prevState)\n  }\n\n  updateStorage = (prevState) => {\n    if (prevState.contacts !== this.state.contacts) {\n      storage.save(\"contacts\", this.state.contacts);\n    }\n  }\n\n\n  handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const name = this.state.name;\n    const number = Number(this.state.number);\n\n    const newContact = {\n      id: uuidv4(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n    if (this.state.contacts.some((el) => el.name === this.state.name)) {\n      alert(`${this.state.name} is already in contacts.`);\n    } else if (!number && name === \"\") {\n      alert(\"Please, enter name and number, your input is empty\");\n    } else if (!number) {\n      alert(\"Please, enter a correct number\");\n    } else if (!name.length) {\n      alert(\"Please, enter a name\");\n    } else if (Number(name)) {\n      alert(\"Please, enter a correct name - NOT A NUMBER\");\n    } else {\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, newContact],\n        name: \"\",\n        number: \"\",\n      }));\n    }\n    // toast.success(\"ADD SUCCESS\")\n  };\n\n  handleFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getFilteredContacts = (filterValue, contacts) =>\n    contacts.filter((el) =>\n      el.name.toLowerCase().includes(filterValue.toLowerCase())\n    );\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((el) => el.id !== id),\n    }));\n  };\n\n  render() {\n    const filteredContacts = this.getFilteredContacts(\n      this.state.filter,\n      this.state.contacts\n    );\n    return (\n      <>\n        <h2>Phonebook</h2>\n        <Form\n          name={this.state.name}\n          number={this.state.number}\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n        />\n        <h2>Contacts</h2>\n        {this.state.contacts.length >= 2 && (\n          <ContactsFilterForm handleFilter={this.handleFilter} />\n        )}\n        <ContactsList\n          contactList={filteredContacts}\n          deleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}